//! # DBus interface proxy for: `org.gtk.vfs.Daemon`
//!
//! This code was generated by `zbus-xmlgen` `4.0.0` from DBus introspection data.
//! Source: `org.gtk.vfs.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus2.github.io/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(interface = "org.gtk.vfs.Daemon", assume_defaults = true)]
trait Daemon {
    /// Cancel method
    fn cancel(&self, serial: u32) -> zbus::Result<()>;

    /// GetConnection method
    fn get_connection(&self) -> zbus::Result<(String, String)>;

    /// ListMonitorImplementations method
    #[allow(clippy::type_complexity)]
    fn list_monitor_implementations(
        &self,
    ) -> zbus::Result<
        Vec<(
            String,
            String,
            bool,
            i32,
            std::collections::HashMap<String, zbus::zvariant::OwnedValue>,
        )>,
    >;

    /// Mount method
    fn mount(
        &self,
        automount: bool,
        dbus_id: &str,
        obj_path: &zbus::zvariant::ObjectPath<'_>,
    ) -> zbus::Result<std::collections::HashMap<String, zbus::zvariant::OwnedValue>>;
}
